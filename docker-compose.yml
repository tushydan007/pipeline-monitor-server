version: "3.8"

services:
  db:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: pipeline_monitoring
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=pipeline_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build: .
    command: celery -A pipeline_monitoring worker -l info
    volumes:
      - .:/app
      - media_volume:/app/media
      - logs_volume:/app/logs
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=pipeline_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-beat:
    build: .
    command: celery -A pipeline_monitoring beat -l info
    volumes:
      - .:/app
      - media_volume:/app/media
      - logs_volume:/app/logs
    environment:
      - DEBUG=True
      - DB_HOST=db
      - DB_NAME=pipeline_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  media_volume:
  logs_volume:
