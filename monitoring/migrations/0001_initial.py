# Generated by Django 5.2.7 on 2025-10-27 12:09

import django.contrib.gis.db.models.fields
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("view", "View"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("analyze", "Analyze"),
                            ("alert", "Alert"),
                            ("verify", "Verify"),
                            ("resolve", "Resolve"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("pipeline", "Pipeline"),
                            ("satellite_image", "Satellite Image"),
                            ("analysis_result", "Analysis Result"),
                            ("alert", "Alert"),
                            ("user", "User"),
                            ("configuration", "Configuration"),
                        ],
                        max_length=50,
                    ),
                ),
                ("resource_id", models.UUIDField()),
                ("resource_name", models.CharField(max_length=200)),
                ("details", models.JSONField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("success", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="Confidence score between 0 and 1",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "detected_location",
                    django.contrib.gis.db.models.fields.PointField(
                        help_text="Location of detected anomaly", srid=4326
                    ),
                ),
                (
                    "affected_area",
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True,
                        help_text="Area affected by the anomaly",
                        null=True,
                        srid=4326,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "raw_data",
                    models.JSONField(
                        blank=True, help_text="Raw analysis data", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("verified", "Verified"),
                            ("false_positive", "False Positive"),
                            ("alert_created", "Alert Created"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("verification_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MonitoringAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("is_resolved", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MonitoringConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nasa_api_key", models.CharField(blank=True, max_length=200)),
                ("nasa_api_enabled", models.BooleanField(default=True)),
                ("analysis_enabled", models.BooleanField(default=True)),
                ("auto_analysis", models.BooleanField(default=True)),
                (
                    "confidence_threshold",
                    models.FloatField(
                        default=0.7,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("alerts_enabled", models.BooleanField(default=True)),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("monitoring_frequency_hours", models.PositiveIntegerField(default=24)),
                ("analysis_frequency_hours", models.PositiveIntegerField(default=6)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pipeline",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "length_km",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
                (
                    "diameter_mm",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(10)]
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        choices=[
                            ("steel", "Steel"),
                            ("plastic", "Plastic"),
                            ("concrete", "Concrete"),
                            ("composite", "Composite"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("maintenance", "Maintenance"),
                            ("inactive", "Inactive"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "start_point",
                    django.contrib.gis.db.models.fields.PointField(srid=4326),
                ),
                (
                    "end_point",
                    django.contrib.gis.db.models.fields.PointField(srid=4326),
                ),
                (
                    "route",
                    django.contrib.gis.db.models.fields.LineStringField(
                        help_text="Pipeline route geometry", srid=4326
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PipelineSegment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("segment_name", models.CharField(max_length=100)),
                ("segment_number", models.PositiveIntegerField()),
                (
                    "length_km",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
                (
                    "start_point",
                    django.contrib.gis.db.models.fields.PointField(srid=4326),
                ),
                (
                    "end_point",
                    django.contrib.gis.db.models.fields.PointField(srid=4326),
                ),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.LineStringField(srid=4326),
                ),
                ("monitoring_frequency_hours", models.PositiveIntegerField(default=24)),
                ("last_monitored", models.DateTimeField(blank=True, null=True)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "terrain_type",
                    models.CharField(
                        choices=[
                            ("urban", "Urban"),
                            ("rural", "Rural"),
                            ("forest", "Forest"),
                            ("water", "Water Body"),
                            ("mountain", "Mountain"),
                            ("desert", "Desert"),
                        ],
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["pipeline", "segment_number"],
            },
        ),
        migrations.CreateModel(
            name="SatelliteImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("image_date", models.DateTimeField()),
                ("satellite_name", models.CharField(max_length=100)),
                ("sensor", models.CharField(max_length=50)),
                (
                    "resolution_m",
                    models.FloatField(help_text="Spatial resolution in meters"),
                ),
                (
                    "bounds",
                    django.contrib.gis.db.models.fields.PolygonField(
                        help_text="Image coverage area", srid=4326
                    ),
                ),
                (
                    "center_point",
                    django.contrib.gis.db.models.fields.PointField(srid=4326),
                ),
                ("image_file", models.ImageField(upload_to="satellite_images/")),
                (
                    "thumbnail",
                    models.ImageField(blank=True, null=True, upload_to="thumbnails/"),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("source_api", models.CharField(default="nasa", max_length=50)),
                ("api_image_id", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-image_date"],
            },
        ),
        migrations.CreateModel(
            name="SystemSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "site_name",
                    models.CharField(
                        default="Pipeline Monitoring System", max_length=200
                    ),
                ),
                (
                    "site_description",
                    models.TextField(
                        default="Advanced pipeline monitoring and analysis platform"
                    ),
                ),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("language", models.CharField(default="en", max_length=10)),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("auto", "Auto"),
                        ],
                        default="light",
                        max_length=10,
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("push_notifications", models.BooleanField(default=True)),
                (
                    "alert_email",
                    models.EmailField(default="admin@example.com", max_length=254),
                ),
                ("alert_phone", models.CharField(default="+1234567890", max_length=20)),
                (
                    "analysis_confidence_threshold",
                    models.FloatField(
                        default=0.8,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("auto_analysis_enabled", models.BooleanField(default=True)),
                ("analysis_retention_days", models.PositiveIntegerField(default=365)),
                ("session_timeout", models.PositiveIntegerField(default=30)),
                ("password_min_length", models.PositiveIntegerField(default=8)),
                ("require_2fa", models.BooleanField(default=False)),
                ("failed_login_lockout", models.PositiveIntegerField(default=5)),
                ("api_rate_limit", models.PositiveIntegerField(default=1000)),
                ("api_key_expiry_days", models.PositiveIntegerField(default=90)),
                ("max_file_size_mb", models.PositiveIntegerField(default=100)),
                ("storage_quota_gb", models.PositiveIntegerField(default=1000)),
                ("auto_cleanup_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "System Settings",
                "verbose_name_plural": "System Settings",
            },
        ),
    ]
